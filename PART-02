03. How to create Client ID and Generate access token with it from webpage?
04. How to CHECK/validate generated access_token, INSERT into ARRAY and PUT it into SESSION
            a) will expires in 5Min
            b) decorate token like Bearer TOKEN
            c) Include grand_type
05. How to check Access_token is exists in Session and Not Expired?



======================= 03. How to create Client ID and Generate access token with it from webpage? ====================


class MarketAuthenticationService{
    use ConsumesExternalServices, InteractsWithMarketResponses;
    
    protected $baseUri;
    protected $clientId;
    protected $clientSecret;
    protected $passwordClientId;
    protected $passwordClientSecret;

    public function __construct(){
        $this->baseUri = config('services.market.base_uri');
        $this->clientId = config('services.market.client_id');
        $this->clientSecret = config('services.market.client_secret');
        $this->passwordClientId = config('services.market.password_client_id');
        $this->passwordClientSecret = config('services.market.password_client_secret');
    }

  public function getClientCredentialsToken(){
        if ($token = $this->existingValidToken())  {
            return $token;
        }

        $formParams = [
            'grant_type' => 'client_credentials',
            'client_id' => $this->clientId,
            'client_secret' => $this->clientSecret,
        ];

        $tokenData = $this->makeRequest('POST', 'oauth/token', [], $formParams);
        $this->storeValidToken($tokenData, 'client_credentials');
        return $tokenData->access_token;
    }


============== 04. How to CHECK/validate generated access_token, INSERT into ARRAY and PUT it into SESSION ==================

public function storeValidToken($tokenData, $grantType){
        $tokenData->token_expires_at = now()->addSeconds($tokenData->expires_in - 5);
        $tokenData->access_token = "{$tokenData->token_type} {$tokenData->access_token}";
        $tokenData->grant_type = $grantType;

        session()->put(['current_token' => $tokenData]);
    }


============================ 05. How to check Access_token is exists in Session and Not Expired?  ================================ 
public function existingValidToken() {
        if (session()->has('current_token')) {
            $tokenData = session()->get('current_token');

            if (now()->lt($tokenData->token_expires_at)) {
                return $tokenData->access_token;
            }
        }
        return false;
    }
